#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.80                        #
#------------------------------------------------------------------------------#

WRKDIR = `pwd`


CC = gcc
CPP = g++
F77 = f77
F9X = gfortran
LD = g++
AR = ar
RANLIB = ranlib
WINDRES = windres

INC =
CFLAGS = -march=pentium4 -O3 -Winit-self -Wcast-align -Wfloat-equal -Winline -Wmissing-declarations -Wmissing-include-dirs -Wextra -Wall -std=gnu99
RESINC = 
RCFLAGS = 
LIBDIR =
LIB = -lcr -lssl -lcurl
LDFLAGS =

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS)
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS)
OBJDIR_RELEASE = .objs
DEP_RELEASE = 
OUT_RELEASE = bin/libcloudthreads.a

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g -DDEBUG
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = .objs
DEP_DEBUG = 
OUT_DEBUG = bin/libcloudthreads.a

INC_DOXYGEN = $(INC)
CFLAGS_DOXYGEN = $(CFLAGS)
RESINC_DOXYGEN = $(RESINC)
RCFLAGS_DOXYGEN = $(RCFLAGS)
LIBDIR_DOXYGEN = $(LIBDIR)
LIB_DOXYGEN = $(LIB)
LDFLAGS_DOXYGEN = $(LDFLAGS)
OBJDIR_DOXYGEN = .objs
DEP_DOXYGEN = 

OBJ_RELEASE = $(OBJDIR_RELEASE)/src/swref.c.o $(OBJDIR_RELEASE)/src/sw_interface.c.o $(OBJDIR_RELEASE)/src/helper/sha.c.o $(OBJDIR_RELEASE)/src/helper/curl.c.o $(OBJDIR_RELEASE)/src/cldvalue.c.o $(OBJDIR_RELEASE)/src/cldthread.c.o $(OBJDIR_RELEASE)/src/cldptr.c.o $(OBJDIR_RELEASE)/src/ciel_checkpoint.c.o $(OBJDIR_RELEASE)/src/cielID.c.o $(OBJDIR_RELEASE)/src/blcr_interface.c.o $(OBJDIR_RELEASE)/lib/cJSON/cJSON.c.o
OBJ_DEBUG = $(OBJDIR_DEBUG)/src/swref.c.o $(OBJDIR_DEBUG)/src/sw_interface.c.o $(OBJDIR_DEBUG)/src/helper/sha.c.o $(OBJDIR_DEBUG)/src/helper/curl.c.o $(OBJDIR_DEBUG)/src/cldvalue.c.o $(OBJDIR_DEBUG)/src/cldthread.c.o $(OBJDIR_DEBUG)/src/cldptr.c.o $(OBJDIR_DEBUG)/src/ciel_checkpoint.c.o $(OBJDIR_DEBUG)/src/cielID.c.o $(OBJDIR_DEBUG)/src/blcr_interface.c.o $(OBJDIR_DEBUG)/lib/cJSON/cJSON.c.o

all: release debug doxygen

clean: clean_release clean_debug

release: $(OUT_RELEASE)

$(OUT_RELEASE): $(OBJ_RELEASE) $(DEP_RELEASE)
	test -d bin || mkdir -p bin
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE)

$(OBJDIR_RELEASE)/src/swref.c.o: src/swref.c
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/swref.c.o src/swref.c

$(OBJDIR_RELEASE)/src/sw_interface.c.o: src/sw_interface.c
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/sw_interface.c.o src/sw_interface.c

$(OBJDIR_RELEASE)/src/helper/sha.c.o: src/helper/sha.c
	test -d $(OBJDIR_RELEASE)/src/helper || mkdir -p $(OBJDIR_RELEASE)/src/helper
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/helper/sha.c.o src/helper/sha.c

$(OBJDIR_RELEASE)/src/helper/curl.c.o: src/helper/curl.c
	test -d $(OBJDIR_RELEASE)/src/helper || mkdir -p $(OBJDIR_RELEASE)/src/helper
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/helper/curl.c.o src/helper/curl.c

$(OBJDIR_RELEASE)/src/cldvalue.c.o: src/cldvalue.c
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/cldvalue.c.o src/cldvalue.c

$(OBJDIR_RELEASE)/src/cldthread.c.o: src/cldthread.c
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/cldthread.c.o src/cldthread.c

$(OBJDIR_RELEASE)/src/cldptr.c.o: src/cldptr.c
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/cldptr.c.o src/cldptr.c

$(OBJDIR_RELEASE)/src/ciel_checkpoint.c.o: src/ciel_checkpoint.c
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/ciel_checkpoint.c.o src/ciel_checkpoint.c

$(OBJDIR_RELEASE)/src/cielID.c.o: src/cielID.c
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/cielID.c.o src/cielID.c

$(OBJDIR_RELEASE)/src/blcr_interface.c.o: src/blcr_interface.c
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/blcr_interface.c.o src/blcr_interface.c

$(OBJDIR_RELEASE)/lib/cJSON/cJSON.c.o: lib/cJSON/cJSON.c
	test -d $(OBJDIR_RELEASE)/lib/cJSON || mkdir -p $(OBJDIR_RELEASE)/lib/cJSON
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/lib/cJSON/cJSON.c.o lib/cJSON/cJSON.c


clean_release:
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)

debug: $(OUT_DEBUG)

$(OUT_DEBUG): $(OBJ_DEBUG) $(DEP_DEBUG)
	test -d bin || mkdir -p bin
	$(AR) rcs $(OUT_DEBUG) $(OBJ_DEBUG)
	$(AR) rcs $(OUT_DEBUG) $(OBJ_DEBUG)

$(OBJDIR_DEBUG)/src/swref.c.o: src/swref.c
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/swref.c.o src/swref.c

$(OBJDIR_DEBUG)/src/sw_interface.c.o: src/sw_interface.c
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/sw_interface.c.o src/sw_interface.c

$(OBJDIR_DEBUG)/src/helper/sha.c.o: src/helper/sha.c
	test -d $(OBJDIR_DEBUG)/src/helper || mkdir -p $(OBJDIR_DEBUG)/src/helper
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/helper/sha.c.o src/helper/sha.c

$(OBJDIR_DEBUG)/src/helper/curl.c.o: src/helper/curl.c
	test -d $(OBJDIR_DEBUG)/src/helper || mkdir -p $(OBJDIR_DEBUG)/src/helper
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/helper/curl.c.o src/helper/curl.c

$(OBJDIR_DEBUG)/src/cldvalue.c.o: src/cldvalue.c
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/cldvalue.c.o src/cldvalue.c

$(OBJDIR_DEBUG)/src/cldthread.c.o: src/cldthread.c
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/cldthread.c.o src/cldthread.c

$(OBJDIR_DEBUG)/src/cldptr.c.o: src/cldptr.c
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/cldptr.c.o src/cldptr.c

$(OBJDIR_DEBUG)/src/ciel_checkpoint.c.o: src/ciel_checkpoint.c
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/ciel_checkpoint.c.o src/ciel_checkpoint.c

$(OBJDIR_DEBUG)/src/cielID.c.o: src/cielID.c
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/cielID.c.o src/cielID.c

$(OBJDIR_DEBUG)/src/blcr_interface.c.o: src/blcr_interface.c
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/blcr_interface.c.o src/blcr_interface.c

$(OBJDIR_DEBUG)/lib/cJSON/cJSON.c.o: lib/cJSON/cJSON.c
	test -d $(OBJDIR_DEBUG)/lib/cJSON || mkdir -p $(OBJDIR_DEBUG)/lib/cJSON
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/lib/cJSON/cJSON.c.o lib/cJSON/cJSON.c


clean_debug:
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)

doxygen: before_doxygen

before_doxygen:
	doxygen Doxyfile

virtual_all:  release doxygen

.PHONY: clean clean_release clean_debug before_doxygen doxygen virtual_all

